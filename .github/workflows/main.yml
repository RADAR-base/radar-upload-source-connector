# Continuous integration, including test and integration test
name: Main test

# Run in master and dev branches and in all pull requests to those branches
on:
    push:
        branches: [ master, dev ]
    pull_request:
        branches: [ master, dev ]

jobs:
    # Build and test the code
    kotlin:
        # The type of runner that the job will run on
        runs-on: ubuntu-latest

        # Steps represent a sequence of tasks that will be executed as part of the job
        steps:
            # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
            - uses: actions/checkout@v2

            - uses: actions/setup-java@v1
              with:
                  java-version: 11

            - name: Cache
              uses: actions/cache@v2.0.0
              with:
                  # Cache gradle directories
                  path: |
                      ~/.gradle/caches
                      ~/.gradle/native
                      ~/.gradle/wrapper
                  # Key for restoring and saving the cache
                  key: ${{ runner.os }}-gradle

            # Compile the code
            - name: Compile code
              run: ./gradlew assemble

            # Gradle check
            - name: Check
              run: ./gradlew check

    # Build and test the code
    node:
      # The type of runner that the job will run on
      runs-on: ubuntu-latest

      # Steps represent a sequence of tasks that will be executed as part of the job
      steps:
        # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
        - uses: actions/checkout@v2
        - uses: actions/cache@v2
          with:
            path: ~/.npm
            key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
            restore-keys: |
              ${{ runner.os }}-node-
              
        - name: Use Node.js 14
          uses: actions/setup-node@v1
          with:
            node-version: 14

        # Compile the code
        - name: Install dependencies
          working-directory: ./radar-upload-frontend
          run: npm install

        # Compile the code
        - name: Build code
          working-directory: ./radar-upload-frontend
          run: npm run build

    docker:
      # The type of runner that the job will run on
      runs-on: ubuntu-latest

      # Steps represent a sequence of tasks that will be executed as part of the job
      steps:
        # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
        - uses: actions/checkout@v2

        - name: Build upload connector Kotlin docker
          run: docker build -t radarbase/kafka-connect-upload-source:SNAPSHOT -f kafka-connect-upload-source/Dockerfile .

        - name: Build upload backend Kotlin docker
          run: docker build -t radarbase/radar-upload-backend:SNAPSHOT -f radar-upload-backend/Dockerfile .

        - name: Build upload front end Node docker
          run: docker build -t radarbase/radar-upload-frontend:SNAPSHOT radar-upload-frontend
